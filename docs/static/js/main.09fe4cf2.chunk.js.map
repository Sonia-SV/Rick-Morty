{"version":3,"sources":["img/logo.png","img/AlienAlive.png","img/AlienDead.png","img/Alienunknown.png","img/HumanAlive.png","img/HumanDead.png","img/Humanunknown.png","components/Header.js","components/Footer.js","components/Filters.js","components/Character.js","components/CharacterList.js","services/api.js","components/DetailedCharacter.js","components/error/ErrorURL.js","components/error/ErrorFilter.js","components/App.js","index.js"],"names":["module","exports","Header","className","to","src","logo","alt","Footer","Filters","props","htmlFor","id","type","maxLength","onChange","event","preventDefault","handleFilterCharacters","key","currentTarget","value","filterName","Character","name","image","species","speciesType","status","speciesDescription","renderStatusIcon","CharacterList","singleCharacter","characters","map","character","getDataFromApi","fetch","then","response","json","data","results","planet","origin","episodes","episode","length","gender","DetailedCharacter","onClick","ErrorURL","ErrorFilter","App","useState","setCharacters","setFilterName","useEffect","sort","a","b","toLowerCase","localeCompare","JSON","parse","localStorage","getItem","setItem","stringify","renderFilteredCharacters","filter","includes","HumanAlive","HumanDead","Humanunknown","AlienAlive","AlienDead","Alienunknown","renderFilterResults","renderFilterError","renderSearchResult","Fragment","exact","path","render","routeCharacterId","match","params","foundCharacter","find","parseInt","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.09fe4cf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/AlienAlive.9b2e59cb.png\";","module.exports = __webpack_public_path__ + \"static/media/AlienDead.c933eacb.png\";","module.exports = __webpack_public_path__ + \"static/media/Alienunknown.bfa10fb2.png\";","module.exports = __webpack_public_path__ + \"static/media/HumanAlive.7e924485.png\";","module.exports = __webpack_public_path__ + \"static/media/HumanDead.16182c9e.png\";","module.exports = __webpack_public_path__ + \"static/media/Humanunknown.5e8184af.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../img/logo.png';\nimport '../stylesheets/layout/header.scss';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <Link to=\"/\">\n        <h1 className=\"header__title\">\n          <img src={logo} alt=\"Rick and Morty logo\"></img>\n        </h1>\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport '../stylesheets/layout/footer.scss';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <small>2020Â© Sonia Sanz Vivas</small>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/layout/filters.scss';\n\nconst Filters = (props) => {\n  const handleSearch = (event) => {\n    event.preventDefault();\n    props.handleFilterCharacters({\n      key: event.currentTarget.id,\n      value: event.currentTarget.value,\n    });\n  };\n  return (\n    <form className=\"filters\">\n      <label htmlFor=\"name\" className=\"filters__label\">\n        <span className=\"filters__name\">Search by name: </span>\n        <input id=\"name\" type=\"text\" maxLength=\"10\" onChange={handleSearch} className=\"filters__input\" value={props.filterName} />\n      </label>\n    </form>\n  );\n};\n\nexport default Filters;\n\nFilters.propTypes = {\n  filterName: PropTypes.string,\n  handleFilterCharacters: PropTypes.func,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/layout/character.scss';\n\nconst Character = (props) => {\n  const { id, name, image, species, speciesType, status } = props;\n\n  const speciesDescription = speciesType !== '' ? `-${speciesType}-` : '';\n  return (\n    <article className=\"article\">\n      <img className=\"article__icon\" src={props.renderStatusIcon(species, status)} alt={'iconDescription'} />\n\n      <Link to={`/character/${id}`}>\n        <img className=\"article__img\" src={image} alt={name} />\n      </Link>\n\n      <div className=\"article__name\">\n        <h2>{name}</h2>\n      </div>\n      <div className=\"article__species\">\n        <p>\n          {species}\n          <span>{speciesDescription}</span>\n        </p>\n      </div>\n      <Link className=\"article__button\" to={`/character/${id}`}>\n        <div></div>\n        <p>More info...</p>\n      </Link>\n    </article>\n  );\n};\n\nexport default Character;\n\nCharacter.propTypes = {\n  id: PropTypes.number,\n  image: PropTypes.string,\n  name: PropTypes.string,\n  species: PropTypes.string,\n  speciesType: PropTypes.string,\n  status: PropTypes.string,\n  renderStatusIcon: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Character from './Character';\nimport '../stylesheets/layout/characterList.scss';\nconst CharacterList = (props) => {\n  const singleCharacter = props.characters.map((character) => {\n    return (\n      <Character\n        key={character.id}\n        id={character.id}\n        name={character.name}\n        species={character.species}\n        speciesType={character.speciesType}\n        image={character.image}\n        status={character.status}\n        renderStatusIcon={props.renderStatusIcon}\n      />\n    );\n  });\n\n  return <section className=\"section__list\">{singleCharacter}</section>;\n};\n\nexport default CharacterList;\n\nCharacterList.propTypes = {\n  characters: PropTypes.array,\n  renderStatusIcon: PropTypes.func,\n};\n","const getDataFromApi = () => {\n  return fetch('https://rickandmortyapi.com/api/character/').then((response) =>\n    response.json().then((data) => {\n      return data.results.map((character) => {\n        return {\n          id: character.id,\n          image: character.image,\n          name: character.name,\n          species: character.species,\n          speciesType: character.type,\n          planet: character.origin.name,\n          episodes: character.episode.length,\n          status: character.status,\n          gender: character.gender,\n        };\n      });\n    })\n  );\n};\n\nexport default getDataFromApi;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/layout/detailedCharacter.scss';\n\nconst DetailedCharacter = (props) => {\n  const handleDetailContentClick = (event) => {\n    event.preventDefault();\n  };\n  const { name, species, image, planet, episodes, status } = props;\n\n  return (\n    <Link to=\"/\">\n      <article className=\"detail\">\n        <div className=\"detail__card\" onClick={handleDetailContentClick}>\n          <div className=\"detail__card__img\">\n            <img src={image} alt={name} />\n          </div>\n          <div className=\"detail__card__info\">\n            <Link to=\"/\" className=\"detail__card__info__link\">\n              <span>\n                <i className=\"fas fa-arrow-left\"></i> Back\n              </span>\n            </Link>\n            <img className=\"detail__card__icon\" src={props.renderStatusIcon(species, status)} alt={'iconDescription'} />\n            <div className=\"detail__card__info__content\">\n              <h3>\n                <span className=\"detail__card__info__content__title\">Name:</span> <span className=\"detail__card__info__content__result\"> {name}</span>\n              </h3>\n              <p>\n                <span className=\"detail__card__info__content__title\">Species:</span>\n                <span className=\"detail__card__info__content__result\"> {species}</span>\n              </p>\n\n              <p>\n                <span className=\"detail__card__info__content__title\">Life situation:</span>\n                <span className=\"detail__card__info__content__result\"> {status} </span>\n              </p>\n              <p>\n                <span className=\"detail__card__info__content__title\">Origin:</span>\n                <span className=\"detail__card__info__content__result\"> {planet}</span>\n              </p>\n              <p>\n                <span className=\"detail__card__info__content__title\">NÂº episodes:</span>\n                <span className=\"detail__card__info__content__result\"> {episodes}</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </article>\n    </Link>\n  );\n};\n\nexport default DetailedCharacter;\n\nDetailedCharacter.propTypes = {\n  episodes: PropTypes.number,\n  image: PropTypes.string,\n  name: PropTypes.string,\n  planet: PropTypes.string,\n  species: PropTypes.string,\n  status: PropTypes.string,\n  renderStatusIcon: PropTypes.func,\n};\n","import React from 'react';\nimport '../../stylesheets/layout/errorWarning.scss';\n\nconst ErrorURL = () => {\n  return (\n    <section className=\"section__warning\">\n      <p>\n        <span>The character's page you were</span> <span>looking for doesn't exist</span>\n      </p>\n      <img src=\"https://media.giphy.com/media/QuPFL61aiRYZOtPrTI/giphy.gif\" alt=\"Rick and Morty gif\" />\n    </section>\n  );\n};\n\nexport default ErrorURL;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../stylesheets/layout/errorWarning.scss';\n\nconst ErrorFilter = (props) => {\n  const handleReset = (event) => {\n    event.preventDefault();\n    props.handleFilterCharacters({\n      key: event.currentTarget.id,\n    });\n  };\n  return (\n    <section className=\"section__warning\">\n      <p>\n        <span>There's no one </span> <span>here called</span>\n        <span>\n          <em>{props.filterName}</em>\n        </span>\n      </p>\n      <button id=\"reset\" onClick={handleReset}>\n        Try again!\n      </button>\n      .\n    </section>\n  );\n};\n\nexport default ErrorFilter;\n\nErrorFilter.propTypes = {\n  filterName: PropTypes.string,\n  handleFilterCharacters: PropTypes.func,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport getDataFromApi from '../services/api';\nimport DetailedCharacter from './DetailedCharacter';\nimport ErrorURL from './error/ErrorURL';\nimport ErrorFilter from './error/ErrorFilter';\nimport AlienAlive from '../img/AlienAlive.png';\nimport AlienDead from '../img/AlienDead.png';\nimport Alienunknown from '../img/Alienunknown.png';\nimport HumanAlive from '../img/HumanAlive.png';\nimport HumanDead from '../img/HumanDead.png';\nimport Humanunknown from '../img/Humanunknown.png';\nimport '../stylesheets/app.scss';\n\ngetDataFromApi();\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState('');\n\n  useEffect(() => {\n    getDataFromApi().then((data) => setCharacters(data.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))));\n  }, []);\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('filter'));\n    if (data) {\n      setFilterName(data);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('filter', JSON.stringify(filterName));\n  });\n\n  const handleFilterCharacters = (data) => {\n    if (data.key === 'name') {\n      setFilterName(data.value);\n    }\n    if (data.key === 'reset') {\n      setFilterName('');\n    }\n  };\n\n  const renderFilteredCharacters = () => {\n    return characters.filter((character) => {\n      return character.name.toLowerCase().includes(filterName.toLowerCase());\n    });\n  };\n\n  const renderStatusIcon = (species, status) => {\n    if (species === 'Human') {\n      if (status === 'Alive') {\n        return HumanAlive;\n      } else if (status === 'Dead') {\n        return HumanDead;\n      } else {\n        return Humanunknown;\n      }\n    } else if (status === 'Alive') {\n      return AlienAlive;\n    } else if (status === 'Dead') {\n      return AlienDead;\n    } else {\n      return Alienunknown;\n    }\n  };\n\n  const renderFilterResults = <CharacterList characters={renderFilteredCharacters()} renderStatusIcon={renderStatusIcon} />;\n\n  const renderFilterError = <ErrorFilter filterName={filterName} handleFilterCharacters={handleFilterCharacters} />;\n\n  const renderSearchResult = renderFilteredCharacters().length === 0 ? renderFilterError : renderFilterResults;\n\n  const renderDetailedCharacter = (props) => {\n    const routeCharacterId = props.match.params.id;\n    const foundCharacter = characters.find((character) => character.id === parseInt(routeCharacterId));\n    if (foundCharacter) {\n      return (\n        <DetailedCharacter\n          name={foundCharacter.name}\n          image={foundCharacter.image}\n          status={foundCharacter.status}\n          species={foundCharacter.species}\n          planet={foundCharacter.planet}\n          episodes={foundCharacter.episodes}\n          renderStatusIcon={renderStatusIcon}\n        />\n      );\n    } else {\n      return <ErrorURL />;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Header />\n      <main className=\"main\">\n        <Route exact path=\"/\">\n          <Filters handleFilterCharacters={handleFilterCharacters} filterName={filterName} />\n          {renderSearchResult}\n        </Route>\n        <Switch>\n          <Route exact path=\"/character/:id\" render={renderDetailedCharacter} />\n        </Switch>\n      </main>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\nimport './stylesheets/index.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}