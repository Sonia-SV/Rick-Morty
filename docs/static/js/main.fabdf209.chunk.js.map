{"version":3,"sources":["img/logo.png","img/AlienAlive.png","img/AlienDead.png","img/Alienunknown.png","img/HumanAlive.png","img/HumanDead.png","img/Humanunknown.png","services/api.js","components/Header.js","components/Footer.js","components/Filters.js","components/Character.js","components/CharacterList.js","components/DetailedCharacter.js","components/error/ErrorURL.js","components/error/ErrorFilter.js","components/App.js","index.js"],"names":["module","exports","getDataFromApi","fetch","then","response","json","data","results","map","character","id","image","name","species","speciesType","type","planet","origin","episodes","episode","length","status","gender","Header","className","to","src","logo","alt","Footer","Filters","props","handleSearch","event","preventDefault","handleFilterCharacters","key","currentTarget","value","htmlFor","maxLength","onChange","filterName","filterSpecies","filterStatus","onClick","Character","speciesDescription","renderStatusIcon","CharacterList","singleCharacter","characters","DetailedCharacter","ErrorURL","ErrorFilter","App","useState","setCharacters","setFilterName","setFilterSpecies","setFilterStatus","useEffect","sort","a","b","toLowerCase","localeCompare","JSON","parse","localStorage","getItem","setItem","stringify","HumanAlive","HumanDead","Humanunknown","AlienAlive","AlienDead","Alienunknown","renderFilteredCharacters","filter","includes","renderFilterResults","renderFilterError","renderSearchResult","Fragment","exact","path","render","routeCharacterId","match","params","foundCharacter","find","parseInt","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.fabdf209.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/AlienAlive.9b2e59cb.png\";","module.exports = __webpack_public_path__ + \"static/media/AlienDead.c933eacb.png\";","module.exports = __webpack_public_path__ + \"static/media/Alienunknown.bfa10fb2.png\";","module.exports = __webpack_public_path__ + \"static/media/HumanAlive.7e924485.png\";","module.exports = __webpack_public_path__ + \"static/media/HumanDead.16182c9e.png\";","module.exports = __webpack_public_path__ + \"static/media/Humanunknown.5e8184af.png\";","const getDataFromApi = () => {\n  return fetch('https://rickandmortyapi.com/api/character/').then((response) =>\n    response.json().then((data) => {\n      return data.results.map((character) => {\n        return {\n          id: character.id,\n          image: character.image,\n          name: character.name,\n          species: character.species,\n          speciesType: character.type,\n          planet: character.origin.name,\n          episodes: character.episode.length,\n          status: character.status,\n          gender: character.gender,\n        };\n      });\n    })\n  );\n};\n\nexport default getDataFromApi;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../img/logo.png';\nimport '../stylesheets/layout/header.scss';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <Link to=\"/\">\n        <h1 className=\"header__title\">\n          <img src={logo} alt=\"Rick and Morty logo\"></img>\n        </h1>\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport '../stylesheets/layout/footer.scss';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <small>2020Â© Sonia Sanz Vivas</small>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/layout/filters.scss';\n\nconst Filters = (props) => {\n  const handleSearch = (event) => {\n    event.preventDefault();\n    props.handleFilterCharacters({\n      key: event.currentTarget.id,\n      value: event.currentTarget.value,\n    });\n  };\n  return (\n    <form className=\"filters\">\n      <label htmlFor=\"name\" className=\"filters__label\">\n        <span className=\"filters__name\">Search by name: </span>\n        <input id=\"name\" type=\"text\" maxLength=\"10\" onChange={handleSearch} className=\"filters__input\" value={props.filterName} />\n      </label>\n      <label htmlFor=\"species\" className=\"filters__label\">\n        <span className=\"filters__name\"> Search by species: </span>\n\n        <select id=\"species\" value={props.filterSpecies} className=\"filters__input\" onChange={handleSearch}>\n          <option value=\"All\">All</option>\n          <option value=\"Human\">Human</option>\n          <option value=\"Alien\">Alien</option>\n          {/* <option value=\"Humanoid\">Humanoid</option>\n          <option value=\"Unknown\">Unknown</option> */}\n        </select>\n      </label>\n      <label htmlFor=\"species\" className=\"filters__label\">\n        <span className=\"filters__name\"> Search by status: </span>\n\n        <select id=\"status\" value={props.filterStatus} className=\"filters__input\" onChange={handleSearch}>\n          <option value=\"All\">All</option>\n          <option value=\"Dead\">Dead</option>\n          <option value=\"Alive\">Alive</option>\n          <option value=\"Unknown\">Unknown</option>\n        </select>\n      </label>\n      <label htmlFor=\"rest\" className=\"filters__label\">\n        <span className=\"filters__name\"> Clear: </span>\n        <button id=\"reset\" className=\"filters__input filters__button\" onClick={handleSearch}>\n          <i className=\"fas fa-ban\"></i>\n        </button>\n      </label>\n    </form>\n  );\n};\n\nexport default Filters;\n\nFilters.propTypes = {\n  filterName: PropTypes.string,\n  handleFilterCharacters: PropTypes.func,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/layout/character.scss';\n\nconst Character = (props) => {\n  const { id, name, image, species, speciesType, status } = props;\n\n  const speciesDescription = speciesType !== '' ? `-${speciesType}-` : '';\n  return (\n    <article className=\"article\">\n      <img className=\"article__icon\" src={props.renderStatusIcon(species, status)} alt={'iconDescription'} />\n\n      <Link to={`/character/${id}`}>\n        <img className=\"article__img\" src={image} alt={name} />\n      </Link>\n\n      <div className=\"article__name\">\n        <h2>{name}</h2>\n      </div>\n      <div className=\"article__species\">\n        <p>\n          {species}\n          <span>{speciesDescription}</span>\n        </p>\n      </div>\n      <Link className=\"article__button\" to={`/character/${id}`}>\n        <div></div>\n        <p>More info...</p>\n      </Link>\n    </article>\n  );\n};\n\nexport default Character;\n\nCharacter.propTypes = {\n  id: PropTypes.number,\n  image: PropTypes.string,\n  name: PropTypes.string,\n  species: PropTypes.string,\n  speciesType: PropTypes.string,\n  status: PropTypes.string,\n  renderStatusIcon: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Character from './Character';\nimport '../stylesheets/layout/characterList.scss';\nconst CharacterList = (props) => {\n  const singleCharacter = props.characters.map((character) => {\n    return (\n      <Character\n        key={character.id}\n        id={character.id}\n        name={character.name}\n        species={character.species}\n        speciesType={character.speciesType}\n        image={character.image}\n        status={character.status}\n        renderStatusIcon={props.renderStatusIcon}\n      />\n    );\n  });\n\n  return <section className=\"section__list\">{singleCharacter}</section>;\n};\n\nexport default CharacterList;\n\nCharacterList.propTypes = {\n  characters: PropTypes.array,\n  renderStatusIcon: PropTypes.func,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/layout/detailedCharacter.scss';\n\nconst DetailedCharacter = (props) => {\n  const handleDetailContentClick = (event) => {\n    event.preventDefault();\n  };\n  const { name, species, image, planet, episodes, status } = props;\n\n  return (\n    <Link to=\"/\">\n      <article className=\"detail\">\n        <div className=\"detail__card\" onClick={handleDetailContentClick}>\n          <div className=\"detail__card__img\">\n            <img src={image} alt={name} />\n          </div>\n          <div className=\"detail__card__info\">\n            <Link to=\"/\" className=\"detail__card__info__link\">\n              <span>\n                <i className=\"fas fa-arrow-left\"></i> Back\n              </span>\n            </Link>\n            <img className=\"detail__card__icon\" src={props.renderStatusIcon(species, status)} alt={'iconDescription'} />\n            <div className=\"detail__card__info__content\">\n              <h3>\n                <span className=\"detail__card__info__content__title\">Name:</span> <span className=\"detail__card__info__content__result\"> {name}</span>\n              </h3>\n              <p>\n                <span className=\"detail__card__info__content__title\">Species:</span>\n                <span className=\"detail__card__info__content__result\"> {species}</span>\n              </p>\n\n              <p>\n                <span className=\"detail__card__info__content__title\">Life situation:</span>\n                <span className=\"detail__card__info__content__result\"> {status} </span>\n              </p>\n              <p>\n                <span className=\"detail__card__info__content__title\">Origin:</span>\n                <span className=\"detail__card__info__content__result\"> {planet}</span>\n              </p>\n              <p>\n                <span className=\"detail__card__info__content__title\">NÂº episodes:</span>\n                <span className=\"detail__card__info__content__result\"> {episodes}</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </article>\n    </Link>\n  );\n};\n\nexport default DetailedCharacter;\n\nDetailedCharacter.propTypes = {\n  episodes: PropTypes.number,\n  image: PropTypes.string,\n  name: PropTypes.string,\n  planet: PropTypes.string,\n  species: PropTypes.string,\n  status: PropTypes.string,\n  renderStatusIcon: PropTypes.func,\n};\n","import React from 'react';\nimport '../../stylesheets/layout/errorWarning.scss';\n\nconst ErrorURL = () => {\n  return (\n    <section className=\"section__warning\">\n      <p>\n        <span>The character's page you were</span> <span>looking for doesn't exist</span>\n      </p>\n      <img src=\"https://media.giphy.com/media/QuPFL61aiRYZOtPrTI/giphy.gif\" alt=\"Rick and Morty gif\" />\n    </section>\n  );\n};\n\nexport default ErrorURL;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../stylesheets/layout/errorWarning.scss';\n\nconst ErrorFilter = (props) => {\n  const handleReset = (event) => {\n    event.preventDefault();\n    props.handleFilterCharacters({\n      key: event.currentTarget.id,\n    });\n  };\n  return (\n    <section className=\"section__warning\">\n      <p>\n        <span>The creature that you are looking for isn't here</span>\n      </p>\n      <button id=\"reset\" onClick={handleReset}>\n        Try again!\n      </button>\n      .\n    </section>\n  );\n};\n\nexport default ErrorFilter;\n\nErrorFilter.propTypes = {\n  filterName: PropTypes.string,\n  handleFilterCharacters: PropTypes.func,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport getDataFromApi from '../services/api';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport DetailedCharacter from './DetailedCharacter';\nimport ErrorURL from './error/ErrorURL';\nimport ErrorFilter from './error/ErrorFilter';\nimport AlienAlive from '../img/AlienAlive.png';\nimport AlienDead from '../img/AlienDead.png';\nimport Alienunknown from '../img/Alienunknown.png';\nimport HumanAlive from '../img/HumanAlive.png';\nimport HumanDead from '../img/HumanDead.png';\nimport Humanunknown from '../img/Humanunknown.png';\nimport '../stylesheets/app.scss';\n\ngetDataFromApi();\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterSpecies, setFilterSpecies] = useState('All');\n  const [filterStatus, setFilterStatus] = useState('All');\n\n  useEffect(() => {\n    getDataFromApi().then((data) => setCharacters(data.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))));\n  }, []);\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('filter'));\n    if (data) {\n      setFilterName(data.filterName);\n      setFilterSpecies(data.filterSpecies);\n      setFilterStatus(data.filterStatus);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('filter', JSON.stringify({ filterName, filterSpecies, filterStatus }));\n  });\n\n  const resetState = () => {\n    setFilterName('');\n    setFilterSpecies('All');\n    setFilterStatus('All');\n  };\n\n  const handleFilterCharacters = (data) => {\n    if (data.key === 'name') {\n      setFilterName(data.value);\n    }\n    if (data.key === 'reset') {\n      resetState();\n    }\n    if (data.key === 'species') {\n      setFilterSpecies(data.value);\n    }\n    if (data.key === 'status') {\n      setFilterStatus(data.value);\n    }\n  };\n\n  const renderStatusIcon = (species, status) => {\n    if (species === 'Human') {\n      if (status === 'Alive') {\n        return HumanAlive;\n      } else if (status === 'Dead') {\n        return HumanDead;\n      } else {\n        return Humanunknown;\n      }\n    } else if (status === 'Alive') {\n      return AlienAlive;\n    } else if (status === 'Dead') {\n      return AlienDead;\n    } else {\n      return Alienunknown;\n    }\n  };\n  const renderFilteredCharacters = () => {\n    return characters\n      .filter((character) => {\n        return character.name.toLowerCase().includes(filterName.toLowerCase());\n      })\n      .filter((character) => {\n        return filterSpecies === 'All' ? true : character.species === filterSpecies;\n      })\n      .filter((character) => {\n        return filterStatus === 'All' ? true : character.status === filterStatus;\n      });\n  };\n\n  const renderFilterResults = <CharacterList characters={renderFilteredCharacters()} renderStatusIcon={renderStatusIcon} />;\n\n  const renderFilterError = (\n    <ErrorFilter filterName={filterName} filterSpecies={filterSpecies} filterStatus={filterStatus} handleFilterCharacters={handleFilterCharacters} />\n  );\n\n  const renderSearchResult = renderFilteredCharacters().length === 0 ? renderFilterError : renderFilterResults;\n\n  const renderDetailedCharacter = (props) => {\n    const routeCharacterId = props.match.params.id;\n    const foundCharacter = characters.find((character) => character.id === parseInt(routeCharacterId));\n    if (foundCharacter) {\n      return (\n        <DetailedCharacter\n          name={foundCharacter.name}\n          image={foundCharacter.image}\n          status={foundCharacter.status}\n          species={foundCharacter.species}\n          planet={foundCharacter.planet}\n          episodes={foundCharacter.episodes}\n          renderStatusIcon={renderStatusIcon}\n        />\n      );\n    } else {\n      return <ErrorURL />;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Header />\n      <main className=\"main\">\n        <Route exact path=\"/\">\n          <Filters\n            handleFilterCharacters={handleFilterCharacters}\n            filterName={filterName}\n            filterSpecies={filterSpecies}\n            filterStatus={filterStatus}\n          />\n          {renderSearchResult}\n        </Route>\n        <Switch>\n          <Route exact path=\"/character/:id\" render={renderDetailedCharacter} />\n        </Switch>\n      </main>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\nimport './stylesheets/index.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}